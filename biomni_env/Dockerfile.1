# Biomni Environment Dockerfile - 优化版
# 基于biomni-basic.1镜像，避免重复构建基础环境

FROM biomni_env-biomni-basic.1

# 设置环境变量
ENV PATH="/opt/biomni_tools/bin:$PATH"
ENV HOMER="/opt/biomni_tools/homer"
ENV PIP_CONFIG_FILE="/opt/miniconda3/pip/pip.conf"

# 切换到root用户进行系统级安装
USER root

# 安装额外的系统依赖（生物信息学工具）
RUN apt-get update && apt-get install -y --no-install-recommends \
    # 额外的科学计算依赖
    libcairo2-dev libpango1.0-dev \
    libhdf5-dev libnetcdf-dev \
    # R环境
    r-base r-base-dev \
    # 生物信息学命令行工具
    samtools bcftools bedtools fastqc bowtie2 bwa \
    ncbi-tools-bin ncbi-blast+ mafft trimmomatic \
    # 清理缓存
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# 创建工具目录
RUN mkdir -p /opt/biomni_tools/bin && \
    chown -R biomni:biomni /opt/biomni_tools

# 复制额外的配置文件
COPY --chown=biomni:biomni bio_env.yml r_packages.yml ./

# 切换到biomni用户
USER biomni

# 配置conda使用中科大镜像源
RUN /opt/miniconda3/bin/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main/ && \
    /opt/miniconda3/bin/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/ && \
    /opt/miniconda3/bin/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/ && \
    /opt/miniconda3/bin/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/ && \
    /opt/miniconda3/bin/conda config --set show_channel_urls yes && \
    /opt/miniconda3/bin/conda config --set remote_read_timeout_secs 600 && \
    /opt/miniconda3/bin/conda config --set remote_connect_timeout_secs 600

# 拆分 bio_env.yml
RUN cat <<EOF > split_bio_env.py
import yaml
import math

with open('bio_env.yml') as f:
    d = yaml.safe_load(f)

conda_deps = []
pip_deps = []
for dep in d['dependencies']:
    if isinstance(dep, dict) and 'pip' in dep:
        pip_deps.extend(dep['pip'])
    else:
        conda_deps.append(dep)

# 写入 conda-only yml
d['dependencies'] = conda_deps
with open('bio_env.conda.yml', 'w') as f:
    yaml.dump(d, f, sort_keys=False)

# 拆分 pip requirements
chunk_size = 10
for i in range(math.ceil(len(pip_deps)/chunk_size)):
    chunk = pip_deps[i*chunk_size:(i+1)*chunk_size]
    fname = f'requirements.{i+1:02d}.txt'
    with open(fname, 'w') as f:
        f.write('\n'.join(chunk))
EOF
RUN python3 split_bio_env.py && rm split_bio_env.py

# 用 conda 安装 conda-only 依赖（增加重试机制）
RUN for i in {1..3}; do \
      echo "==== 尝试第 $i 次安装conda依赖 ===="; \
      if /opt/miniconda3/bin/conda env update -n biomni_e1 -f bio_env.conda.yml; then \
        echo "conda依赖安装成功！"; \
        break; \
      else \
        echo "第 $i 次安装失败"; \
        if [ $i -eq 3 ]; then \
          echo "所有重试都失败了，构建失败"; \
          exit 1; \
        else \
          echo "等待30秒后重试..."; \
          sleep 30; \
        fi; \
      fi; \
    done

# 安装R包（增加重试机制）
RUN for i in {1..3}; do \
      echo "==== 尝试第 $i 次安装R包 ===="; \
      if /opt/miniconda3/bin/conda env update -n biomni_e1 -f r_packages.yml; then \
        echo "R包安装成功！"; \
        break; \
      else \
        echo "第 $i 次安装失败"; \
        if [ $i -eq 3 ]; then \
          echo "所有重试都失败了，构建失败"; \
          exit 1; \
        else \
          echo "等待30秒后重试..."; \
          sleep 30; \
        fi; \
      fi; \
    done

# 分批安装 pip requirements
RUN for f in requirements.*.txt; do \
      echo "==== 安装 $f ===="; \
      cat $f; echo ""; \
      pip install -r $f; \
    done

ENV MAKEFLAGS="-j16"
RUN echo $FORCE_R_REBUILD
# 安装额外的R包
# 配置R使用国内镜像 https://new.bioconductor.org/about/mirrors/
# https://bioconductor.org
# https://mirrors.westlake.edu.cn/bioconductor
# https://mirror.accum.se/mirror/bioconductor.org
RUN echo "options(repos = c(CRAN = 'https://mirrors.ustc.edu.cn/CRAN/'))" > ~/.Rprofile && \
    echo "options(BioC_mirror = 'https://bioconductor.posit.co/')" >> ~/.Rprofile

# 先用conda安装有问题的R包
RUN /opt/miniconda3/bin/conda install -n biomni_e1 -c conda-forge r-interp --yes || echo "interp package installation failed, continuing..."

COPY --chown=biomni:biomni install_r_packages.R ./
RUN /opt/miniconda3/envs/biomni_e1/bin/Rscript install_r_packages.R 2>&1 | tee install_r_packages.log || echo "Some R packages may have failed, continuing... (see install_r_packages.log)"

COPY --chown=biomni:biomni install_cli_tools.sh cli_tools_config.json ./
# 安装CLI工具
ENV BIOMNI_TOOLS_DIR="/opt/biomni_tools"
COPY --chown=biomni:biomni downloads/ /opt/biomni_tools/downloads/
RUN /bin/bash install_cli_tools.sh --auto 2>&1 | tee install_cli_tools.log || echo "Some CLI tools may have failed, continuing... (see install_cli_tools.log)"

USER root
RUN apt-get update && apt-get install -y --no-install-recommends less && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
USER biomni

# 安装额外的conda包
RUN /opt/miniconda3/bin/conda install -n biomni_e1 -c conda-forge vina openbabel --yes

# 安装额外的pip包
RUN pip install deeppurpose descriptastorus flowkit hyperopt pyscreener tiledb

# 安装ADFRsuite
RUN cd /opt/biomni_tools && \
    tar -xzf downloads/ADFRsuite_x86_64Linux_1.0.tar.gz && \
    cd ADFRsuite_x86_64Linux_1.0 && \
    echo y | ./install.sh

# 设置ADFRsuite环境变量
ENV PATH="$PATH:/opt/biomni_tools/ADFRsuite_x86_64Linux_1.0/bin"
ENV ADFRSUITE_HOME="/opt/biomni_tools/ADFRsuite_x86_64Linux_1.0"

ENV BIOMNI_DATA_PATH="/opt/biomni/data"

# 自动激活conda环境
COPY --chown=biomni:biomni setup.sh ./
RUN echo 'source /opt/miniconda3/etc/profile.d/conda.sh' >> /home/biomni/.bashrc && \
    echo 'conda activate biomni_e1' >> /home/biomni/.bashrc && \
    echo 'echo "🟢 Conda环境已激活: $(conda info --envs | grep "*" | awk "{print \$1}")"' >> /home/biomni/.bashrc

# 暴露端口
EXPOSE 8888 7860

# 默认命令
CMD ["/bin/bash"] 